<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation=
				"http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans.xsd
				
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context.xsd
				
				http://www.springframework.org/schema/mvc
				http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
   <!-- :: 공통적인 사항을 설정한 common-servlet.xml 사용. -->
       
    <!--  ㅇ 어노테이션 기반 :: Spring Framework 사용.
    		ㅇ @Controller annotation 선언된 Bean 만 Wiring
		   ㅇ @Service / @Repository  annotation 선언된 Bean 은 Scan 제외 -->
	<context:component-scan base-package="com.springjobs">
		<context:include-filter 	type="annotation"		expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter 	type="annotation" 	expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter 	type="annotation" 	expression="org.springframework.stereotype.Repository"/>
	</context:component-scan> 
	
	
   	<!-- ■ DefaultAnnotationHandlerMapping 설정 등 기타 Annotation 기반
   	        모든 기능을 사용 할 수 있는 아래의 설정으로 변경 -->
	<mvc:annotation-driven/> 
	<!-- <mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class ="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="supportedMediaTypes" value = "text/plain;charser=UTF-8"/>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven> -->
	<!--테스트 끝  -->
	<!--	
		■ / 형식의 Mapping 은 모든(정적,동적 자원) 요청시 처리책임
		■ 정적자원 요청시 DispatcherServlet 에게 처리방법지정
	    ■ 정적자원요청 (아래의 URI 포함 요청)시  처리 경로 location 지정
	     	
	    실제 PJT 진행시 일반적으로 resources 폴더를 만들고 폴더내부에
	     css , image, js 등 넣어 관리하며 아래와 같이 1번의 설정으로 관리
	     <mvc:resources mapping="/resources/**" location="/resources/" />
	--> 
   	
<!--    	<mvc:resources mapping="/resources/**" location="/resources/" /> -->
   	<mvc:resources mapping="/view/**" location="/view/" />
   	<!-- <mvc:resources mapping="/jsp/**" location="/jsp/" /> -->

	 <!-- /////// Client 에서 전달되는 JSON Data 를 Domain Object 롤 변환 받기위한 설정 ///////-->
	<bean id="jsonConverter"	class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json" />
	</bean>
	
	 <!-- /////// AnnotationMethodHandlerAdapter 에 jsonConverer  DI /////// -->
	 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonConverter" /> 
			</list>
		</property>	 
	 </bean>


	 <!-- /////// Client 로 전달되는 Domain Object  를 JSON Data  변환위한 설정            /////// -->
	 <!-- Client  Response 받기원핟는 Content 타입을 선택,협상(Negotiation)하는 ViewResolver 설정 --> 
	 <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">

        <property name="defaultContentType" value="text/html"/>
        <property name="viewResolvers">
        	<list>
	            <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
				<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
				    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
				    <property name="prefix" value="/WEB-INF/jsp/"/>
				    <property name="suffix" value=".jsp"/>
				</bean>
        	</list>
    	</property>
    
         <property name="defaultViews">
             <list>
                 <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
             </list>
         </property>
     </bean>
</beans>