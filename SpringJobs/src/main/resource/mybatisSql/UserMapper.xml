<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">
	<resultMap id="userSelectMap" type="com.springjobs.domain.Users">
		<result property="uno"  column="UNO"  	jdbcType="INTEGER" />
		<result property="unm"  column="UNM"  	jdbcType="VARCHAR" />
		<result property="uenm" column="UENM" 	jdbcType="VARCHAR" />
		<result property="uem"  column="UEM"  	jdbcType="VARCHAR" />
		<result property="upw"  column="UPW"  	jdbcType="VARCHAR" />
		<result property="uco"  column="UCO"  	jdbcType="VARCHAR" />
		<result property="usx"  column="USX"  	jdbcType="VARCHAR" />
		<result property="ucnf" column="UCNF" 	jdbcType="VARCHAR" />
		<result property="ubd"  column="UBD"  	jdbcType="DATE" />
		<result property="upho" column="UPHO" 	jdbcType="VARCHAR" />
		<result property="uadr" column="UADR" 	jdbcType="VARCHAR" />
		<result property="uurl" column="UURL" 	jdbcType="VARCHAR" />
		<result property="ures" column="URES" 	jdbcType="VARCHAR" />
		<result property="cno" 	column="CNO" 	jdbcType="INTEGER" />
		<collection property="uphots" ofType="com.springjobs.domain.UPhotos">
		    <id property="phno"			column="PHNO"		jdbcType="INTEGER"/>
	    	<result property="phot"		column="PHOT" 		jdbcType="VARCHAR"/>
	    	<result property="uno"		column="UNO" 		jdbcType="INTEGER"/>
		</collection>
		<collection property="upfurl" ofType="com.springjobs.domain.Upfurl">
		    <id property="upfurlno"		column="UPFURLNO"	jdbcType="INTEGER"/>
	    	<result property="url"		column="URL" 		jdbcType="VARCHAR"/>
	    	<result property="uno"		column="UNO" 		jdbcType="INTEGER"/>
		</collection>
		<collection property="skills" ofType="com.springjobs.domain.Skills">
		    <id property="skno"		column="SKNO"	jdbcType="INTEGER"/>
		</collection>
		<collection property="unotify" ofType="com.springjobs.domain.Unotify">
		    <id property="notino"			column="NOTINO"			jdbcType="INTEGER"/>
		    <result property="target"		column="TARGET" 		jdbcType="VARCHAR"/>
	    	<result property="title"		column="TITLE" 			jdbcType="VARCHAR"/>
	    	<result property="description"	column="DESCRIPTION"	jdbcType="VARCHAR"/>
	    	<result property="url"			column="URL" 			jdbcType="VARCHAR"/>
	    	<result property="check"		column="CHECK" 			jdbcType="VARCHAR"/>
	    	<result property="regDate"		column="REGDATE" 		jdbcType="VARCHAR"/>
		</collection>
	</resultMap>
	
	<resultMap id="utagsSelectMap" type="com.springjobs.domain.UTags">
		<result property="uexno" column="UEXNO" jdbcType="INTEGER" />
		<result property="uextg" column="UEXTG" jdbcType="VARCHAR" />
		<result property="uno" column="UNO" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="usclsSelectMap" type="com.springjobs.domain.Uscls">
		<result property="scno" column="SCNO" jdbcType="INTEGER" />
		<result property="scnm" column="SCNM" jdbcType="VARCHAR" />
		<result property="scmj" column="SCMJ" jdbcType="VARCHAR" />
		<result property="scgr" column="SCGR" jdbcType="DOUBLE" />
		<result property="scsd" column="SCSD" jdbcType="DATE" />
		<result property="sced" column="SCED" jdbcType="DATE" />
		<result property="uno" column="UNO" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="uexpsSelectMap" type="com.springjobs.domain.Uexps">
		<result property="expno" column="EXPNO" jdbcType="INTEGER" />
		<result property="expcn" column="EXPCN" jdbcType="VARCHAR" />
		<result property="expdn" column="EXPDN" jdbcType="VARCHAR" />
		<result property="exppy" column="EXPPY" jdbcType="INTEGER" />
		<result property="expsd" column="EXPSD" jdbcType="DATE" />
		<result property="exped" column="EXPED" jdbcType="DATE" />
		<result property="expwc" column="EXPWC" jdbcType="VARCHAR" />
		<result property="uno" 	 column="UNO" 	jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="ulansSelectMap" type="com.springjobs.domain.Ulans">
		<result property="lgno"  column="LGNO"  jdbcType="INTEGER" />
		<result property="lgnm"  column="LGNM"  jdbcType="VARCHAR" />
		<result property="lglvl" column="LGLVL" jdbcType="VARCHAR" />
		<result property="uno" 	 column="UNO" 	jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="ucertsSelectMap" type="com.springjobs.domain.Ucerts">
		<result property="ctno"    column="CTNO"  	jdbcType="INTEGER" />
		<result property="ctnm"    column="CTNM"  	jdbcType="VARCHAR" />
		<result property="ctag"    column="CTAG"  	jdbcType="VARCHAR" />
		<result property="ctuqno"  column="CTUQNO" 	jdbcType="INTEGER" />
		<result property="ctsc"    column="CTSC" 	jdbcType="INTEGER" />
		<result property="ctgrd"    column="CTGRD" 	jdbcType="VARCHAR" />
		<result property="cturl"   column="CTURL"  	jdbcType="VARCHAR" />
		<result property="ctdy"    column="CTDY"  	jdbcType="DATE" />
		<result property="ctsd"    column="CTSD"  	jdbcType="DATE" />
		<result property="cted"    column="CTED"  	jdbcType="DATE" />
		<result property="uno" 	   column="UNO" 	jdbcType="INTEGER" /> 
	</resultMap>
	
	<resultMap id="uPhotoMap" type="com.springjobs.domain.UPhotos">
	    <result property="phno"    column="phno"  	jdbcType="INTEGER" />
	    <result property="phct"    column="phct"  	jdbcType="VARCHAR" />
	    <result property="uno"    column="uno"  	jdbcType="INTEGER" />
	</resultMap>

	<!-- SQL : INSERT -->
	<insert id="addUser" parameterType="com.springjobs.domain.Users" useGeneratedKeys="true" keyProperty="uno" keyColumn="uno">
		INSERT
		INTO USERS(unm, uem, upw, ucnf)
		VALUES (#{unm},#{uem},#{upw},'0');
	</insert>

	<select id="login" parameterType="com.springjobs.domain.Users"
		resultMap="userSelectMap">
		SELECT
		U.UNO,U.UNM,U.UENM,U.UEM,U.UPW,U.UCO,U.USX,U.UCNF,U.UBD,U.UPHO,U.UADR,UURL,URES,C.CNO, PH.phno, PH.phot, PH.uno, N.notino
		FROM USERS U 
		left outer join
		CINFOS C ON U.uno=C.uno 
		left outer join 
		UPHOTS PH on PH.uno=U.uno 
		left outer join
		UNOTIFY N on N.uno=U.uno
		and U.UCNF='1'
		and N.check='0'
		WHERE U.uem=#{uem}
		and U.upw=#{upw} 
	</select>

	<select id="idDuplicateCheck" parameterType="com.springjobs.domain.Users"
		resultType="int">
		SELECT COUNT(*)
		FROM USERS
		WHERE uem=#{uem};
	</select>


	<update id="addInfo" parameterType="com.springjobs.domain.Users">
		UPDATE USERS
		<set>
			uenm=#{uenm},
			ubd=#{ubd},
			usx=#{usx},
			upho=#{upho},
			uurl=#{uurl},
			uadr=#{uadr}
		</set>
		WHERE uno=#{uno}
	</update>
	
	<delete id="removeTags" parameterType="com.springjobs.domain.Users">
		DELETE
		FROM
		UTAGS
		WHERE uno=${uno}
	</delete>
	
	<insert id="uTags" parameterType="map">
		INSERT
		INTO UTAGS(uno, uextg)
		VALUES
	    <foreach collection="uextg" item="item" separator=" , ">
	        ( #{uno},#{item} )
	    </foreach>
	</insert>
	
	<select id="getUtag"	 parameterType="int"      resultType="String" >
		SELECT
		uextg
		FROM
		UTAGS 
		WHERE
		uno=#{uno};
	</select>

	<select id="getUexps"	 parameterType="int"	resultType="com.springjobs.domain.Uexps">
		SELECT
		*
		FROM
		UEXPS 
		WHERE
		uno=#{uno};
	</select>
	
	<insert id="addUexps" 	 parameterType="com.springjobs.domain.Uexps">
		INSERT
		INTO UEXPS(expcn, uno, expdn, exppy, expsd, exped, expwc, exppt)
		VALUES (#{expcn}, #{uno}, #{expdn},#{exppy}, #{expsd}, #{exped}, #{expwc}, #{exppt})
		ON DUPLICATE KEY UPDATE
		expcn=#{expcn}, uno=#{uno}, expdn=#{expdn}, exppy=#{exppy}, expsd=#{expsd}, exped=#{exped}, expwc=#{expwc}, exppt=#{exppt};
	</insert>
	
	<select id="getUlans"	 parameterType="int"	resultType="com.springjobs.domain.Ulans">
		SELECT
		*
		FROM
		ULANS
		WHERE
		uno=#{uno};
	</select>
	
	<select id="getUcerts"	 parameterType="int"	resultType="com.springjobs.domain.Ucerts">
		SELECT
		*
		FROM
		UCERTS
		WHERE
		uno=#{uno};
	</select>
	
	<select id="getUscls"	 parameterType="int"	resultType="com.springjobs.domain.Uscls">
		SELECT
		*
		FROM
		USCLS 
		WHERE
		uno=#{uno};
	</select>
	
	<insert id="addUscls" 	 parameterType="com.springjobs.domain.Uscls">
		INSERT
		INTO USCLS(scnm, uno, scmj, scgr, scsd, sced)
		VALUES (#{scnm}, #{uno}, #{scmj},#{scgr}, #{scsd}, #{sced})
		ON DUPLICATE KEY UPDATE
		scnm=#{scnm}, uno=#{uno}, scmj=#{scmj}, scgr=#{scgr}, scsd=#{scsd}, sced=#{sced};
	</insert>
	
	<update id="userEmailConfirm"	parameterType="int">
	    UPDATE USERS
	    SET UCNF='1'
	    WHERE uno=#{uno}
	</update>
	
	<insert id="addUlans" 	 parameterType="com.springjobs.domain.Ulans">
		INSERT
		INTO ULANS(lgnm, uno, lglvl)
		VALUES (#{lgnm}, #{uno}, #{lglvl})
		ON DUPLICATE KEY UPDATE
		lgnm=#{lgnm}, uno=#{uno}, lglvl=#{lglvl};
	</insert>
	
	<insert id="addUcerts" 	 parameterType="com.springjobs.domain.Ucerts">
		INSERT
		INTO UCERTS(ctnm, uno, ctag, ctuqno, ctsc, ctgrd, cturl, ctdy, ctsd, cted)
		VALUES (#{ctnm}, #{uno}, #{ctag}, #{ctuqno}, #{ctsc}, #{ctgrd}, #{cturl}, #{ctdy}, #{ctsd}, #{cted})
		ON DUPLICATE KEY UPDATE
		ctnm=#{ctnm}, uno=#{uno}, ctag=#{ctag}, ctuqno=#{ctuqno}, ctsc=#{ctsc}, ctgrd=#{ctgrd}, cturl=#{cturl}, ctdy=#{ctdy}, ctsd=#{ctsd}, cted=#{cted};
	</insert>
	
	<update id="updateUres"	parameterType="com.springjobs.domain.Users">
		UPDATE USERS
		SET URES=#{ures}
		WHERE uno=#{uno}
	</update>
	
	<insert id="uploadPhoto" parameterType="com.springjobs.domain.UPhotos">
		insert into UPHOTS values(0,#{phot},#{uno}) 
		on duplicate key update phot=#{phot};
	</insert>
	
	<select id="getUserPhoto" parameterType="com.springjobs.domain.Users" resultMap="uPhotoMap">
		select * from UPHOTS
		where uno=#{uno}
	</select>
	
	<select id="getUserSkills" parameterType="com.springjobs.domain.Users" resultType="com.springjobs.domain.Skills">
		select sk.* from YSKILLS ysk
		left outer join SKILLS sk 
		on ysk.skno=sk.skno 
		where ysk.uno=#{uno};
	</select>
	
	<delete id="deleteUserSkills" parameterType="com.springjobs.domain.Users">
		delete from YSKILLS where uno=#{uno}
	</delete>
	
	<insert id="updateUserSkills" parameterType="com.springjobs.domain.Users">
	    insert into YSKILLS values
	    <foreach collection="skills" item="skill" separator=" , ">
	        (0,#{uno},#{skill.skno},5)
	    </foreach>
	</insert>
	
	<insert id="insertUserPfUrl" parameterType="com.springjobs.domain.Upfurl" useGeneratedKeys="true" keyProperty="upfurlno">
	    insert into UPFURL
	    values (0,#{url},#{uno})
	</insert>
	
	<select id="getUserPfUrlList" parameterType="com.springjobs.domain.Upfurl" resultType="com.springjobs.domain.Upfurl">
	    select *
	    from UPFURL where uno=#{uno}
	</select>
	
	<delete id="deleteUserPfUrl" parameterType="com.springjobs.domain.Upfurl">
		delete from UPFURL where upfurlno=#{upfurlno}
	</delete>
	
	<select id="getDeveloperList" parameterType="java.util.List" resultMap="userSelectMap">
	    select t1.uno, t1.unm, pf.url, photo.phot
		from
		(
			select skill.uno, user.unm
			from YSKILLS skill, USERS user
			where 
			<if test="size!=0">
				skill.skno in (
					<foreach collection="list" item="skno" separator=" , ">
					    #{skno}
					</foreach>
				)
			and
			</if>
			user.uno=skill.uno
			group by skill.uno
			<if test="size!=0">
				having count(skill.uno) = #{size}
			</if>
		)t1
		left outer join UPFURL pf
		on pf.uno=t1.uno
		left outer join UPHOTS photo 
		on photo.uno=t1.uno
	</select>
	
	<select id="getUserInfo" parameterType="int" resultType="com.springjobs.domain.Users">
	    select *
	    from USERS where uno=#{uno}
	</select>
	
	<select id="getNotifyList" parameterType="com.springjobs.domain.Users" resultType="com.springjobs.domain.Unotify">
	    select * 
	    from UNOTIFY noti 
	    where uno=#{uno} 
	    and regdate>= date_add(now(), interval -7 day) 
	    order by regdate asc;
	</select>
	
	<select id="getNotifyCount" parameterType="com.springjobs.domain.Users" resultType="com.springjobs.domain.Unotify">
	    select *
		from UNOTIFY noti
		where noti.uno=#{uno} and noti.CHECK='0'
	</select>
	
	<update id="readNotify" parameterType="com.springjobs.domain.Users">
	    update UNOTIFY noti
		set noti.check='1'
		where uno=#{uno};
	</update>
</mapper>